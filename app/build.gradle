plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id "com.google.protobuf" version "0.8.12"
    id("dagger.hilt.android.plugin")
}
apply from: "$rootDir/app/dependencies.gradle"

// Allow references to generated code
kapt {
    correctErrorTypes = true
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.11.0"
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.franzandel.dicodingintermediatesubmission"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
}

dependencies {
    implementation "androidx.core:core-ktx:${versions.coreKtx}"
    implementation "androidx.appcompat:appcompat:${versions.appCompat}"
    implementation "com.google.android.material:material:${versions.material}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"
    implementation "androidx.annotation:annotation:${versions.annotation}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.livedataKtx}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.viewmodelKtx}"

    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"

    implementation "androidx.datastore:datastore:${versions.datastore}"
    implementation "com.google.protobuf:protobuf-javalite:${versions.protobuf}" // for DataStore Generator

    implementation "androidx.core:core-splashscreen:${versions.splashscreen}"

    implementation "androidx.paging:paging-runtime-ktx:${versions.pagingKtx}"

    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${versions.glide}"

    implementation "androidx.fragment:fragment-ktx:${versions.fragmentKtx}"

    debugImplementation "com.github.chuckerteam.chucker:library:${versions.chucker}"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:${versions.chucker}"

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${versions.swipeRefreshLayout}"

    implementation "androidx.camera:camera-camera2:${versions.cameraX}"
    implementation "androidx.camera:camera-lifecycle:${versions.cameraX}"
    implementation "androidx.camera:camera-view:${versions.cameraX}"

    implementation(platform("com.squareup.okhttp3:okhttp-bom:${versions.okhttp}"))
    implementation("com.squareup.okhttp3:okhttp")

    implementation "id.zelory:compressor:${versions.compressor}"

    implementation("com.google.dagger:hilt-android:${versions.hilt}")
    kapt("com.google.dagger:hilt-android-compiler:${versions.hilt}")

    testImplementation "junit:junit:${testVersions.junit}"

    androidTestImplementation "androidx.test.ext:junit:${androidTestVersions.junitExt}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${androidTestVersions.espressoCore}"
}
